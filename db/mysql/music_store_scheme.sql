-- MySQL Script generated by MySQL Workbench
-- Sun Mar 19 18:08:08 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema music_store
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema music_store
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `music_store` DEFAULT CHARACTER SET utf8 ;
USE `music_store` ;

-- -----------------------------------------------------
-- Table `music_store`.`actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`actions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`users` (
  `id` BINARY(16) NOT NULL,
  `login` VARCHAR(32) NOT NULL,
  `pass` VARCHAR(32) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `wallet` DECIMAL(25,2) NOT NULL,
  `token` BINARY(16) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`authors` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(48) NOT NULL,
  `description` TEXT NOT NULL,
  `user_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_authors_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_authors_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `music_store`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`albums` (
  `id` BINARY(16) NOT NULL,
  `title` VARCHAR(48) NOT NULL,
  `price` DECIMAL(18,2) NOT NULL,
  `description` TEXT NOT NULL,
  `release_date` DATE NOT NULL,
  `add_date` DATETIME NOT NULL DEFAULT now(),
  `q_sold` BIGINT NOT NULL DEFAULT 0,
  `author_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_albums_authors1_idx` (`author_id` ASC),
  CONSTRAINT `fk_albums_authors1`
    FOREIGN KEY (`author_id`)
    REFERENCES `music_store`.`authors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`trade_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`trade_history` (
  `id` BINARY(16) NOT NULL,
  `price` DECIMAL(18,2) NOT NULL,
  `datetime` DATETIME NOT NULL,
  `action_id` INT NOT NULL,
  `user_id` BINARY(16) NOT NULL,
  `album_id` BINARY(16) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_trade_history_actions1_idx` (`action_id` ASC),
  INDEX `fk_trade_history_users1_idx` (`user_id` ASC),
  INDEX `fk_trade_history_albums1_idx` (`album_id` ASC),
  CONSTRAINT `fk_trade_history_actions1`
    FOREIGN KEY (`action_id`)
    REFERENCES `music_store`.`actions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trade_history_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `music_store`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trade_history_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `music_store`.`albums` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `role_UNIQUE` (`role` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`tracks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`tracks` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `duration` INT NOT NULL,
  `size` BIGINT NOT NULL,
  `bitrate` INT NOT NULL,
  `pos` TINYINT NOT NULL,
  `album_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tracks_albums1_idx` (`album_id` ASC),
  CONSTRAINT `fk_tracks_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `music_store`.`albums` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`genres` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`user_to_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`user_to_role` (
  `role_id` INT NOT NULL,
  `user_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`role_id`, `user_id`),
  INDEX `fk_user_to_role_users1_idx` (`user_id` ASC),
  INDEX `fk_user_to_role_roles1_idx` (`role_id` ASC),
  CONSTRAINT `fk_user_to_role_roles1`
    FOREIGN KEY (`role_id`)
    REFERENCES `music_store`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_to_role_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `music_store`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`user_to_album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`user_to_album` (
  `user_id` BINARY(16) NOT NULL,
  `album_id` BINARY(16) NOT NULL,
  INDEX `user_id_FK_idx` (`user_id` ASC),
  INDEX `album_id_FK_idx` (`album_id` ASC),
  PRIMARY KEY (`album_id`, `user_id`),
  CONSTRAINT `user_to_album_user_id_FK`
    FOREIGN KEY (`user_id`)
    REFERENCES `music_store`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_to_album_album_id_FK`
    FOREIGN KEY (`album_id`)
    REFERENCES `music_store`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_store`.`album_to_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_store`.`album_to_genre` (
  `genre_id` INT NOT NULL,
  `album_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`genre_id`, `album_id`),
  INDEX `fk_album_to_genre_albums1_idx` (`album_id` ASC),
  INDEX `fk_album_to_genre_genres1_idx` (`genre_id` ASC),
  CONSTRAINT `fk_album_to_genre_genres1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `music_store`.`genres` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_album_to_genre_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `music_store`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
